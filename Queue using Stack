PROBLEM: Implement a Queue using two stack s1 and s2.

Input:
      enqueue(2)
      enqueue(3)
      dequeue()
      enqueue(4)
      dequeue()
Output: 2 3

Explanation:
            enqueue(2) the queue will be {2}
            enqueue(3) the queue will be {3 2}
            dequeue() the poped element will be 2 
            the stack will be {3}
            enqueue(4) the stack will be {4 3}
            dequeue() the poped element will be 3. 
            
            
 SOLUTION:
 
 
 class Queue {
    stack<int> input, output;
public:

    void enqueue(int x) {
        input.push(x);
    }
    
    int dequeue() {
        while(input.size()>0){
            output.push(input.top());
            input.pop();
        }
        int c=output.top();
        output.pop();
        while(output.size()>0){
            input.push(output.top());
            output.pop();
        }
        return c;
    }
};





